<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="dist/output.css" rel="stylesheet">
    <title>Document</title>
</head>
<body>
    <!--titulo centrado en  caja blanca-->
    <div>
        <h1> Promesas cargando imagenes</h1>
    </div>
    <br/>
     <!--contenedor principar  de botones de las imagenes-->
    <div>
        <!--botones de las imagenes que carga imagen bien -->
        <button onclick="cargarImagen(true)">cargar con exito ✅</button>
        <!--botones de las imagenes que carga imagen mal -->
        <button onclick="cargarImagen(false)">cargar con errores 🤬</button>
    </div>
    <br/>
    <!--contenedor de las imagenes que se cargan exitosa o con error -->
    <div id="mensaje">
        <!--spinner de cargar oculto inicialmente-->
        <div id="cargando" class="hidden">
            <div class="w-8 h-8 border-4 border-black border-t-transparent rounded-full animate-spin mx-auto mb-2">
                <p>🕵️‍♂️Carga de imagen ...</p>
            </div>
            <!--imagen que se carga dinamicamente (oculta al inicio) -->
            
                <img id ="imagen" class="hidden max-w-full mx-auto mb-2 " alt="imagen cargando...💫">
                <div id="error" class="hidden text-red-500">
                    <!--mensaje de error que se muestra si hay un error al cargar la imagen -->
                    ❌ error al cargar imagen
                </div>
        </div>
    </div>
   <script>
    // Función que simula carga de imagen usando una Promesa
    function cargarImagen(exito) {
      // Mostrar el spinner de carga y ocultar imagen y errores previos
      document.getElementById('cargando').classList.remove("hidden");
      document.getElementById('imagen').classList.add("hidden");
      document.getElementById('error').classList.add("hidden");


      // Crear una promesa que simula la carga de la imagen (tarda 1.5 segundos)
      new Promise((resolve, reject) => {
        setTimeout(() => {
      
    if (exito) {
            // Imagen cargada exitosamente: se resuelve la promesa
            resolve("https://picsum.photos/200/300?grayscale");
          } else {
            // Simulación de error: se rechaza la promesa
            reject("No está conectando al servidor. Por eso no carga la imagen.");
          }
        }, 1500);
      })


      // Cuando la promesa se resuelve correctamente
      .then(url => {
        // Ocultar el spinner
        document.getElementById("cargando").classList.add("hidden");
        // Mostrar la imagen cargada
        const img = document.getElementById("imagen");
        img.src = url;
        img.classList.remove("hidden");
      })


      // Si ocurre un error (rechazo de promesa)
      .catch(mensajeError => {
        // Ocultar el spinner
        document.getElementById("cargando").classList.add("hidden");
        // Mostrar mensaje de error
        document.getElementById("error").classList.remove("hidden");
        // Mostrar alerta emergente con el error
        alert(mensajeError);
      });
    }
  </script>

</body>
</html>